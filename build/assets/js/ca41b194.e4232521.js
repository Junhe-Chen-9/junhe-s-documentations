"use strict";(self.webpackChunkjunhe_s_documents=self.webpackChunkjunhe_s_documents||[]).push([[4462],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(t),d=a,g=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return t?r.createElement(g,l(l({ref:n},u),{},{components:t})):r.createElement(g,l({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2971:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={slug:"Leetcode 1603",title:"Leetcode 1603",authors:["junhechen"],tags:["leetcode","weeklychallenge","notes"]},l=void 0,i={permalink:"/blog/Leetcode 1603",editUrl:"https://github.com/Junhe-Chen-9/junhe-s-documentations/blob/main/blog/2023-05-28-Leet Code.md",source:"@site/blog/2023-05-28-Leet Code.md",title:"Leetcode 1603",description:"Easy question , you can use three int variable or array is faster and easier.",date:"2023-05-28T00:00:00.000Z",formattedDate:"May 28, 2023",tags:[{label:"leetcode",permalink:"/blog/tags/leetcode"},{label:"weeklychallenge",permalink:"/blog/tags/weeklychallenge"},{label:"notes",permalink:"/blog/tags/notes"}],readingTime:1.09,hasTruncateMarker:!1,authors:[{name:"Junhe Chen",title:"Software Developer",url:"https://bio.junhechen.com",imageURL:"https://bio.junhechen.com/assets/IMG_0001.jpeg",key:"junhechen"}],frontMatter:{slug:"Leetcode 1603",title:"Leetcode 1603",authors:["junhechen"],tags:["leetcode","weeklychallenge","notes"]},prevItem:{title:"Leetcode 1396",permalink:"/blog/Leetcode 1396"},nextItem:{title:"Leetcode 1547",permalink:"/blog/Leetcode 1547"}},c={authorsImageUrls:[void 0]},s=[{value:"348",id:"348",level:3}],u={toc:s},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Easy question , you can use three int variable or array is faster and easier."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class ParkingSystem {\n    int[] lot;\n    public ParkingSystem(int big, int medium, int small) {\n        lot = new int[]{big,medium,small};\n    }\n    \n    public boolean addCar(int carType) {\n        if(lot[carType - 1] == 0) return false;\n        lot[carType - 1] --;\n        return true;\n    }\n}\n")),(0,a.kt)("h3",{id:"348"},"348"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class TicTacToe {\n    int[] rows,cols;\n    int diagonal,antiDiagonal;\n\n    public TicTacToe(int n) {\n        rows = new int[n];\n        cols = new int[n];\n        diagonal = 0;\n        antiDiagonal = 0;    \n    }\n    \n    public int move(int row, int col, int player) {\n        int n = rows.length;\n        // determine the mark by player \n        int mark = (player == 1) ? 1 : -1;\n        // mark the row and col \n        rows[row] += mark;\n        cols[col] += mark;\n        // mark the diagonal or antiDiagonal if applies\n        if(row == col) diagonal += mark;\n        if(col == (n - row - 1)) antiDiagonal += mark;\n        // if any row or col scores n that means our new mark connected a row col diagonal or antiDiagonal;\n        if(Math.abs(rows[row]) == n|| Math.abs(cols[col]) == n || Math.abs(diagonal) == n || Math.abs(antiDiagonal)  == n) return player;\n        // no winer\n        return 0;\n    }\n}\n\n/**\n * Your TicTacToe object will be instantiated and called as such:\n * TicTacToe obj = new TicTacToe(n);\n * int param_1 = obj.move(row,col,player);\n */\n")))}m.isMDXComponent=!0}}]);